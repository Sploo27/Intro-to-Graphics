// GLSL STARTER CODE BY DANIEL S. BUCKSTEIN
//  -> IMAGE TAB (final)

//------------------------------------------------------------
// SHADERTOY MAIN

// mainImage: process the current pixel (exactly one call per pixel)
//    fragColor: output final color for current pixel
//    fragCoord: input location of current pixel in image (in pixels)
void mainImage(out color4 fragColor, in sCoord fragCoord)
{
    // setup
    // test UV for input image
    sCoord uv = fragCoord / iChannelResolution[0].xy;
    
    // TESTING
    // set iChannel0 to 'Misc/Buffer A' and fetch sample
    
    vec4 tex1 = texture(iChannel0, uv);
    vec4 tex2 = texture(iChannel1, uv);
    vec4 tex3 = texture(iChannel2, uv);
    
    
    //buffer a / rotating cube map
    //fragColor = tex1;
    
    //buffer b / bright pass
    //fragColor = tex2;
    
    //buffer c / blur
    //fragColor = tex3;
    
    
    
    //mix composition
    //fragColor = mix(tex1, tex2, tex3);
    
    //addition composition
    //fragColor = tex1 + tex2 + tex3;
    
    //screen composition
    //fragColor = 1.0 - (1.0 - tex1) * (1.0 - tex2) * (1.0 - tex3);
    
    //cool invert color
    fragColor = (1.0 - tex1) * (1.0 - tex2) * (1.0 - tex3);
    
    //Color Burn mode
    //fragColor = (1.0 - (1.0 - tex2)/tex1)/tex3;
    
}